pipeline {
    agent any
    environment {
        STAGE_ENVIRONMENT = "Anthony_JenkinsGit-staging-server"
        PRODUCT_ENVIRONMENT = "Anthony_JenkinsGit-production-envir"
        SONARQUBE = "{properties {property 'sonar.Task6.2C', 'SonarQube Code Analysis'}"
        SECURITY_SCAN_PATH = "C:/Program Files/OWASP/Zed Attack Proxy> java -jar zap-2.10.0.jar -cmd -quickurl http://localhost:8080/job/JenkinsGit/"
    }
    stages {
        stage("Build") {
            steps {
                echo "Build code using Maven to compile and package code"
                echo "mvn compile package"
            }
        }
        stage("Unit and Integration Test") {
            steps {
                echo "Run Unit Tests using Junit"
                echo "mvn test-unit"
                echo "Run Integration Tests using Jmeter"
                echo "mvn test-integration"
            }
            post {
                failure {
                    mail to: "h07701850@gmail.com",
                    subject: "Code failed in Unit and Integration Test",
                    body: "Code has failed in Unit and Integration Test stage"  
                }
            }
        }
        stage("Code Analysis") {
            steps {
                echo "Run SonarQube code analysis tool to analyse the code and ensure it meets industry standards"
                echo "mvn sonarqube $SONARQUBE"
            }
            
        }
        stage("Security Scan") {
            steps {
                echo "Run OWASP ZAP to perform a security scan"
                echo "$SECURITY_SCAN_PATH"
            }

            post {
                failure {
                    mail to: "h07701850@gmail.com",
                    subject: "Code failed in Security Scan",
                    body: "Code has failed in Security Scan stage"  
                }
            }

        }
        stage("Deploy to Staging") {
            steps {
                echo "Deploy application to staging server using AWS EC2"
                echo "arn:aws:s3:::$STAGE_ENVIRONMENT/*"
            }

        }
        stage("Integration Tests on Staging") {
            steps {
                echo "Run Integration Tests on Staging server using Jmeter"
                echo "mvn test-integration $STAGE_ENVIRONMENT"
            }

            post {
                failure {
                    emailext attachLog: true, body: '', subject: ''
                    mail to: "h07701850@gmail.com",
                    subject: "Code failed in Integration Tests on Staging",
                    body: "Code has failed in Integration Tests on Staging stage"  
                }
            }
        }
        stage("Deploy to Production") {
            steps {
                echo "Deployed code to production environment using AWS EC2 instance"
                echo "arn:aws:s3::deploy:$STAGE_ENVIRONMENT/*/$PRODUCT_ENVIRONMENT"
            }
            post {
                success {
                    emailext replyTo: "h07701850@gmail.com",
                              subject: "Deployment Status",
                              body: "Deployment has completed successfully.",
                              attachLog: true
                }
                failure {
                    mail to: "h07701850@gmail.com",
                    subject: "Code failed in Deploy to Production",
                    body: "Code has failed in Deploy to Production stage"  
                }
            }
        }
    }
    
    }
